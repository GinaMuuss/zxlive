name: deploy

on:
  push:
#    tags:
#      - '*'

env:
  SRC_DIR: zxlive

jobs:
  build_and_deploy:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ 3.11 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run:
          pip install .
      - name: Fix pysidedeploy.spec file - Specific to MacOS
        if: matrix.os == 'macos-latest'
        run: |
          sed -i '' '48i\
              --macos-create-app-bundle\
          ' pysidedeploy.spec
      - name: Download Dependencies executable instead of Dependency Walker - Specific to Windows
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri 'https://github.com/lucasg/Dependencies/releases/download/v1.11.1/Dependencies_x64_Release.zip' -OutFile '$PWD\Dependencies_x64_Release.zip'
          Add-Type -AssemblyName System.IO.Compression.FileSystem ;
          [System.IO.Compression.ZipFile]::ExtractToDirectory("$PWD\Dependencies_x64_Release.zip", "$PWD")
          mv Dependencies_x64_Release\Dependencies.exe C:\Users\runneradmin\AppData\Local\Nuitka\Nuitka\Cache\downloads\depends\x86_64\depends.exe
      - name: Build ZXLive
        run: pyside6-deploy -v -f -c pysidedeploy.spec --keep-deployment-files
      - name: Fix deployment file location - Specific to MacOS
        if: matrix.os == 'macos-latest'
        run: mv zxlive/deployment/__main__.app/Contents/MacOS/__main__ build/__main__.bin
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: build/*
